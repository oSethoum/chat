// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Columns:    GroupsColumns,
		PrimaryKey: []*schema.Column{GroupsColumns[0]},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "sent_at", Type: field.TypeTime},
		{Name: "message", Type: field.TypeString},
		{Name: "group_messages", Type: field.TypeInt, Nullable: true},
		{Name: "user_messages", Type: field.TypeInt, Nullable: true},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_groups_messages",
				Columns:    []*schema.Column{MessagesColumns[3]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "messages_users_messages",
				Columns:    []*schema.Column{MessagesColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UsersGroupsColumns holds the columns for the "users_groups" table.
	UsersGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "group_user_groups", Type: field.TypeInt, Nullable: true},
		{Name: "user_user_groups", Type: field.TypeInt, Nullable: true},
	}
	// UsersGroupsTable holds the schema information for the "users_groups" table.
	UsersGroupsTable = &schema.Table{
		Name:       "users_groups",
		Columns:    UsersGroupsColumns,
		PrimaryKey: []*schema.Column{UsersGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_groups_groups_userGroups",
				Columns:    []*schema.Column{UsersGroupsColumns[2]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "users_groups_users_userGroups",
				Columns:    []*schema.Column{UsersGroupsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		GroupsTable,
		MessagesTable,
		UsersTable,
		UsersGroupsTable,
	}
)

func init() {
	GroupsTable.Annotation = &entsql.Annotation{
		Table: "groups",
	}
	MessagesTable.ForeignKeys[0].RefTable = GroupsTable
	MessagesTable.ForeignKeys[1].RefTable = UsersTable
	MessagesTable.Annotation = &entsql.Annotation{
		Table: "messages",
	}
	UsersTable.Annotation = &entsql.Annotation{
		Table: "users",
	}
	UsersGroupsTable.ForeignKeys[0].RefTable = GroupsTable
	UsersGroupsTable.ForeignKeys[1].RefTable = UsersTable
	UsersGroupsTable.Annotation = &entsql.Annotation{
		Table: "users_groups",
	}
}
